name: CI

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
  test:
    name: PHP ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - php: 8.0
            allow_fail: false
            name: 'PHP 8.0'
          - php: 8.1
            allow_fail: false
            name: 'PHP 8.1'
    steps:
      - uses: actions/checkout@v1

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, libxml, mbstring, intl, xml, fileinfo, zip
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction --no-progress --optimize-autoloader

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Test with phpunit
        run: vendor/bin/phpunit --coverage-text

      - name: Sensiolabs Security checker
        run: composer security-checker

  composer-normalize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Composer normalize
        uses: localheinz/composer-normalize-action@0.5.2
